createIntro = require './intro'

suite 'createIntro', ->

  diContainerFactoryName = null
  diContainerClassName = null
  requiredNamespaces = null

  setup ->
    diContainerFactoryName = 'app.diContainer'
    diContainerClassName = 'app.DiContainer'
    requiredNamespaces = ['Foo', 'Bla']

  test 'should generate createIntro with sorted requires', ->
    src = createIntro(diContainerFactoryName, diContainerClassName) requiredNamespaces
    assert.equal src, """
      // This file was autogenerated by grunt-closure-dicontainer task.
      // Please do not edit.
      goog.provide('app.diContainer');

      goog.require('Bla');
      goog.require('Foo');
      goog.require('goog.Disposable');

      /**
       * Factory for app.DiContainer.
       * @param {Object=} config Server side generated app config.
       * @return {app.DiContainer}
       */
      app.diContainer = function(config) {
        return new app.DiContainer(config);
      };

      /**
       * DI container.
       *
       * @param {Object=} config Server side generated app config.
       * @constructor
       * @extends {goog.Disposable}
       */
      app.DiContainer = function(config) {
        goog.base(this);
        if (config)
          this.config = config;
      };
      goog.inherits(app.DiContainer, goog.Disposable);

      /**
       * @type {Object}
       */
      app.DiContainer.prototype.config = null;
    """